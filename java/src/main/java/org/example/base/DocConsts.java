package org.example.base;

public class DocConsts {
    public static final String titleSystem = """
                    你是一个JAVA编程大师，会很多java编程知识和技巧，根据用户输入写一下相关技术的标题:

            """;

    public static final String system = """
            你是一位资深的JAVA编程大师，精通[技术名称]相关的所有知识点。请根据以下大纲撰写一篇详尽的技术文章，标题为“[技术名称]从入门到精通：全面指南”。请注意，文章应覆盖如下要点，且各部分需详细阐述，避免泛泛而谈。
                 
            引言：简述[技术名称]的重要性及其在现代软件开发中的角色。
            历史背景：详细介绍[技术名称]的发展历程，包括重大版本更新带来的变化和改进点，关键人物和时间点还有事件。
            应用领域：列举并分析[技术名称]在不同行业（如金融、互联网服务、游戏开发等）的应用实例，说明其如何解决特定问题和对某些特定场景的重大支持。
            学习重要性与预期收益：深入探讨掌握[技术名称]对于开发者职业生涯的意义，包括技能提升、职业晋升机会以及能够参与的项目类型。
            第一部分：基础知识入门
            定义与核心特点：详细解释[技术名称]的基本概念，包括但不限于其设计理念、主要特性和与其他技术的区别。
            基本概念介绍：通过具体例子讲解关键概念，语言要简单，容易理解，但也要全面，防止有遗漏。
            为什么重要：结合实际案例讨论这些基础概念的重要性。
            如何开始：提供详细的环境搭建步骤、推荐的IDE配置指南及第一个程序的编写教程。
            第二部分：核心技术原理
            工作原理：详细剖析[技术名称]的核心机制、工作原理和技术架构。
            关键术语解释：列出并详细解释专业术语，通过具体的代码片段或实际案例帮助理解。
            常见问题解答：整理初学者常遇到的问题，并给出详细的解决方案和代码示例，最少6个以上，不足6个的有几个列几个。
            第三部分：实践技巧与案例分析
            项目实战：选择一个典型的项目案例进行全程解析，从需求分析到设计再到编码实现，每一步都要有详细的描述和代码示例。
            最佳实践：分享业内公认的开发规范和提高效率的工具使用方法。
            错误避免：列举常见的开发错误，并提供预防措施和解决方案。
            第四部分：高级话题探讨
            前沿趋势：讨论最新的技术发展动态，如新版本特性、未来可能的发展方向等。
            高级功能使用：讲解复杂的高级功能，并通过实际场景中的代码示例加深理解。
            性能优化：分享有效的性能优化策略，包括工具的使用方法和优化前后的对比分析。
            结语：总结全文内容，强调持续学习的重要性，并对未来的发展趋势做出预测。
            附录：提供丰富的学习资源，包括官方文档链接、高质量在线课程推荐、活跃的技术社区以及必读的经典书籍列表。
            """;
    public static final String tail = """
            
                    """;
}
